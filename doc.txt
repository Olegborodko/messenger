npm start

npm run build

ssh root@45.55.137.69
======================

sudo apt install mongodb

react package.json
"proxy": "http://example.com",
======================
X сделать websocket что-бы обновления в базе данных сразу отображались
- сделать простой поиск по коллекции
X сделать выборку всех messages
X сделать модель
- возможно сделать миграции migrate-mongo
X прикрутить библиотеку к react что-бы отправлять ajax 
- сделать в react хранилище localStorage, и возможно MobX или Recoil
- можно добавить вход по google или пока-что сделать простой вход по паролю
- мне нужен доступ к программе которая собирает все данные с соц сетей и почты
- мне нужен digitalocean аккаунт, что-бы пробовать залить приложение
- нужно переводить voice в текст, найти решения на node, возможно что-то заюзать
- нужно этот текст скормить gpt и что-бы он его переоформил красиво

- настроить фаервол
- сделать что-бы в случае падения сервера node и react сами поднимались при возможности

- и этот messanger потом нужно будет привязать к telegram

X купить домен, без него не хочет работать oauth2
- настроить dns
- нужно сделать https
- настроить отправку писем

у сообщений будет статус, этот статус они будут получать в этой программе

X добавить     "@babel/plugin-proposal-private-property-in-object": "7.16.0"
в "dependencies" в react

X можно поменять gmail на тестовый
X прислать пару писем на gmail самому себе
X вытянуть данные из Zapier
X записать данные в базу данных по id, если их еще там нет
X потом вытянуть из базы эти данные, отобразить
X настрой pm2
======================
{
  "_id": {
    "$oid": "660ea46089542b4483f595dd"
  },
  "name": "Delt A.M",
  "email": "delt@gmail.com",
  "message": "hello, I need your help"
}

===========================
https://stackoverflow.com/questions/48378337/create-react-app-not-picking-up-env-files
https://stackoverflow.com/questions/48291950/proxy-not-working-for-react-and-node
еще не забудь на node - cors поставить

socket-io cors problem
https://stackoverflow.com/questions/24058157/socket-io-node-js-cross-origin-request-blocked

===========================
MessageszapierBot
Token - 7127326097:AAENTSXZTcx2ZoM2lfyG28RcdTNEN0-OviI 2-1
For a description of the Bot API, see this page: https://core.telegram.org/bots/api

===========================
ngrok http 3001

===========================
Вы можете экспортировать образ (snapshot) дроплета и передать его клиенту. Это позволит клиенту импортировать образ на свой аккаунт и создать копию вашего дроплета. DigitalOcean предоставляет инструменты для создания и управления образами дроплетов.

==========================
ssh root@45.55.137.69

filezilla
sftp://45.55.137.69 root pswrd

http://45.55.137.69

- создаем дроплет
- ставим node
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
source ~/.bashrc
nvm install node

nvm install 20.11.1

nvm alias default 20.11.1

- sudo apt install git
- git clone https://github.com/Olegborodko/messenger.git
- npm install для node and react
- настроить .env там и там
- установить пароль для root -> passwd
- sudo apt install mongodb
- делаем дамп локальной базы данных в текущую директорию -> mongodump --db db_project
- закидываем папку damp (базу данных) на сервер
- восстанавливаем бд -> mongorestore --db db_project dump/db_project
- билдим react -> npm run build

- npm install pm2 -g
- pm2 start server.js (запускаем основной файл)
- pm2 save
- pm2 startup
- pm2 stop all (остановить все процессы)
- pm2 unstartup (удалить все настройки из автозапуска)
- pm2 list (показать все приложения)
- pm2 reload <имя_приложения> (перезапустить с изменениями приложение)
- pm2 logs <имя_приложения>

эта часть просто для проверки что react работает
- npm install -g serve (вместо nginx, там где не нужно кеширование и проекты не большие, подойдет)
- с папки с react запускаем приложение -> serve -s build -l 80
- теперь react будет доступен по ip http://45.55.137.69/

- если есть конфликты с package-lock.json
git rm --cached package-lock.json
.gitignore package-lock.json
git commit -m "delete package-lock.json"

- порт 80 занят
sudo ss -tulpn | grep :80
sudo kill 1234

rm -r node_modules/

- не хотят устанавливатся пакеты npm i
npm cache clean --force (чистит кеш npm)
npm install -g npm@latest (поставить последнюю версию npm)
remove node_modules/ and package-lock.json

проверить возможно есть файлы .npmrc или .yarnrc

- если npm i сожрал всю оперативку, можно заюзать yarn
npm install -g yarn
yarn install
yarn build

когда react на production то нужно указать реальный ip сервера а не localhost

=================================

http://45.55.137.69/webhook

================================= 
настраиваем ssh доступ, что-бы заливать изменения из droplet в github
ssh-keygen -t rsa -b 4096 -C "borodkoleg@gmail.com"

eval "$(ssh-agent -s)"
ssh-add ~/.ssh/key-name

cat ~/.ssh/key-name.pub

дальше добавляем ключ pub в github

git remote add second git@github.com:Olegborodko/messenger.git

==================================

https://zapier.com/app/dashboard

{
  body: 'message received\r\n',
  date: 'Wed, 10 Apr 2024 18:49:56 +0300',
  from: 'Oleg Borodko',
  id: '18ec8b3965af86a0',
  subject: 'test subject'
}

=================================работа с бд через terminal
mongo
use db_project
db.messages.find()

db.messages.insertOne({
  idEmail: "1",
  from: "test@gmail.com",
  subject: "subject1",
  body: "test text",
  date: "Wed, 10 Apr 2024 18:49:56 +0300",
  status: "status1"
})

db.messages.deleteMany({});
=================================
код продолжается если явно были не указаны после res.status(200).send('success')
return, res.end() или next()

================================= библиотека для всплыв уведомлений
react-toastify

=================================vim
:q
:q!
:qa! - закрыть все открытые файлы без сохранения
:w - сохранить изменения

rm .*.swp
rm .server.js.swp

I - insert
shift + :

=================================domain
kerriganlink.com
https://ap.www.namecheap.com/Domains/DomainControlPanel/kerriganlink.com/advancedns

=================================ssl free
sudo apt-get update
sudo apt-get install certbot python3-certbot-nginx
-это автоматически установить nginx на порт 80

-останавливаем nginx что-бы освободить порт 80
sudo systemctl stop nginx

- создаем ключи
sudo certbot certonly --standalone -d kerriganlink.com

- как меняется настройка сервера
const https = require('https');
const fs = require('fs');
const app = require('express')();

const options = {
  key: fs.readFileSync('/path/to/privkey.pem'), // Путь к вашему закрытому ключу SSL
  cert: fs.readFileSync('/path/to/fullchain.pem'), // Путь к вашему сертификату SSL
};

https.createServer(options, app).listen(443, () => {
  console.log('Сервер запущен на порту 443');
});
==
- тут будут лежать ключи ssl
/etc/letsencrypt 

-дальше заходим в etc/nginx/sites-available
-создаем файл конфигурации nginx
sudo nano kerriganlink.com.conf

- записываем туда такой код
server {
    listen 443 ssl;
    server_name kerriganlink.com;

    ssl_certificate /etc/letsencrypt/live/kerriganlink.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/kerriganlink.com/privkey.pem;

    location / {
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
}

-делаем символическую ссылку
sudo ln -s /etc/nginx/sites-available/kerriganlink.com.conf /etc/nginx/sites-enabled/

-проверяем что nginx настроен без ошибок
sudo nginx -t

pm2 start app.js --name "node-server" --watch --port 3000
